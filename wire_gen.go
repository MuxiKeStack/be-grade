// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/MuxiKeStack/be-grade/events"
	"github.com/MuxiKeStack/be-grade/grpc"
	"github.com/MuxiKeStack/be-grade/ioc"
	"github.com/MuxiKeStack/be-grade/repository"
	"github.com/MuxiKeStack/be-grade/repository/dao"
	"github.com/MuxiKeStack/be-grade/service"
)

// Injectors from wire.go:

func InitApp() *App {
	logger := ioc.InitLogger()
	db := ioc.InitDB(logger)
	gradeDAO := dao.NewGORMGradeDAO(db)
	gradeRepository := repository.NewGradeRepository(gradeDAO)
	client := ioc.InitEtcdClient()
	ccnuServiceClient := ioc.InitCCNUClient(client)
	courseServiceClient := ioc.InitCourseClient(client)
	gradeService := service.NewGradeService(gradeRepository, ccnuServiceClient, courseServiceClient)
	gradeServiceServer := grpc.NewGradeServiceServer(gradeService)
	server := ioc.InitGRPCxKratosServer(gradeServiceServer, client, logger)
	saramaClient := ioc.InitKafka()
	shareGradeEventConsumer := events.NewShareGradeEventConsumer(saramaClient, logger, gradeService)
	v := ioc.InitConsumers(shareGradeEventConsumer)
	app := &App{
		server:    server,
		consumers: v,
	}
	return app
}
